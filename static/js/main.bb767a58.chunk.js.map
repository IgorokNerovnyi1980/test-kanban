{"version":3,"sources":["redux/types.js","redux/actions.js","variables.js","constants.js","components/Task.jsx","components/NewTask.jsx","components/Column.jsx","pages/Board.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Type","variables","testData","tasks","id","row","seq_num","text","columns","row_0","title","bg","taskIds","row_1","row_2","row_3","render","Wrapper","styled","div","Content","Task","this","props","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","Component","Form","form","BtnBox","Btn","button","width","left","center","hover","Icon","span","NewTask","useState","isOpen","setIsOpen","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","onChange","target","value","type","onClick","Title","bgTitle","Column","columnId","length","droppableId","className","droppableProps","map","key","placeholder","Box","Board","state","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","columnName","find","task","connect","dispatch","GlobalStyle","createGlobalStyle","test","getTest","a","status","payload","useEffect","initialState","reducer","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.bb767a58.chunk.js","sourcesContent":["export const Type = {\n    GET_TEST: 'GET_TEST',\n};","// import axios from 'axios';\nimport {Type} from './types';\n\n\n\nfunction test(str) {\n    return {type: Type.GET_TEST, payload: str};\n};\n\n\n\nexport const getTest = function () {\n\n    return async function (dispatch) {\n        const result = {status:200, text:'test in store'}\n        if (result.status === 200) {\n            dispatch(test(result.text));\n        }\n    };\n};\n\nexport const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    const { state } = this;\n\n    console.log()\n\n    if(!destination){ return;}\n    if(\n        destination.droppableId === source.droppableId &&\n        destination.index === source.index\n    ){\n        return;\n    };\n\n    const start = state.columns[source.droppableId];\n    const finish = state.columns[destination.droppableId];\n\n    if(start === finish){\n\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index,1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = {\n            ...start,\n            taskIds:newTaskIds,\n        };\n        const newState = {...state, columns: {...state.columns, [newColumn.id]:newColumn }};\n        this.setState(newState);\n        return;\n    }\n    const startTaskIds =Array.from(start.taskIds);\n    startTaskIds.splice(source.index,1);\n    const newStart = {\n        ...start,\n        taskIds:startTaskIds\n    };\n\n    const finishTaskIds =Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n        ...finish,\n        taskIds:finishTaskIds\n    };\n\n    const newState = {\n        ...state,\n        columns: {\n            ...state.columns,\n            [newStart.id]:newStart,\n            [newFinish.id]:newFinish  \n        }};\n\n    this.setState(newState);\n}\n\n","export const variables = {\n    //backgrounds\n    mainBG: '#35383f',\n    secondaryBG: '#2b2d33',\n    taskBG:'#191a1d',\n    textAreaBG:'#4f463e',\n    accentBG:'#6a7d7d',\n    //colors\n    mainClr: 'white',\n    secondaryClr:'grey',\n    //font-sizes\n    titleFZ: '1.3em',\n    mainFZ: '1em',\n    secondayFZ: '0.8em',\n    iconFZ:'1.8em',\n    //box-shadow\n    // other\n    //media\n    mediaW_1: '720px',\n    mediaW_11: '721px',\n    mediaW_2: '940px',\n    mediaW_3: '1200px'\n};","export const testData = {\n    tasks: [\n        {id: 't-0', row: \"0\", seq_num: 0, text: \"string1\" },\n        {id: 't-1', row: \"3\", seq_num: 0, text: \"string2\" },\n        {id: 't-2', row: \"2\", seq_num: 0, text: \"string3\" },\n        {id: 't-3', row: \"1\", seq_num: 0, text: \"string4\" },\n        {id: 't-4', row: \"0\", seq_num: 0, text: \"string5\" },\n        {id: 't-5', row: \"3\", seq_num: 0, text: \"string6\" },\n        {id: 't-6', row: \"2\", seq_num: 0, text: \"string7\" },\n        {id: 't-7', row: \"1\", seq_num: 0, text: \"string8\" },\n        {id: 't-8', row: \"0\", seq_num: 0, text: \"string9\" },\n        {id: 't-9', row: \"3\", seq_num: 0, text: \"string10\" },\n    ],\n\n    columns:{\n        row_0:{title:'ON-HOLD', bg: '#fb7e46', id:'row_0',taskIds:['t-2','t-3'] },\n        row_1:{title:'IN-PROGRESS', bg: '#2a92bf', id:'row_1', taskIds:['t-1']},\n        row_2:{title:'NEEDS-REVIEW', bg: '#f4ce46', id:'row_2', taskIds:['t-5','t-6', 't-7','t-8']},\n        row_3:{title:'APPROVED', bg: '#00b961', id:'row_3', taskIds:[]}\n    }\n    ,\n    render:[ 'row_0', 'row_1', 'row_2', 'row_3' ],\n\n};\n","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {Draggable}from 'react-beautiful-dnd';\n\nconst Wrapper = styled.div`\n    width:95%;\n    min-height:50px;\n    background-color:${variables.taskBG};\n    margin-top:10px;\n    :last-child{\n        margin-bottom:10px;\n    }\n`;\nconst Content = styled.div`\n    padding:5px;\n    span{\n        font-weight:bold;\n        color:${variables.mainClr};\n    }\n    p{\n        padding-top:10px;\n        color:${variables.secondaryClr};\n        :last-child{\n            padding-bottom:10px;\n        }\n    }\n`;\n\nclass Task extends Component{\n\n    render(){\n        const {\n            id,\n            text,\n            index\n        } = this.props;\n\n        return(\n            <Draggable\n                draggableId={id}\n                index={index}\n                >\n                {(provided) => (\n                    <Wrapper\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                        <Content>\n                            <p><span>id:</span> {id}</p>\n                            <p>{text}</p>\n                        </Content>\n                    </Wrapper>\n                )}\n                </Draggable>\n\n        )\n\n    }\n};\n\nexport default Task;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\n\nconst Form = styled.form`\n    width:100%;\n    margin-top:10px;\n    padding:5px 10px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;   \n    textArea{\n        padding:5px;\n        min-width:100%;\n        min-height:100px;\n        resize:none;\n        background-color:${variables.textAreaBG};\n        color:${variables.secondaryClr};\n        \n    };\n`;\n\nconst BtnBox = styled.div`\n    width:100%;\n    margin-top:10px;\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n`;\n\nconst Btn = styled.button`\n    min-width: ${props => props.width ? '60%': '10%'};\n    height:40px;\n    background-color:${props => props.bg ? `${variables.textAreaBG}`: `${variables.secondaryBG}`};\n    margin-left:${props => props.left ? '5px' : 'unset'};\n    display:flex;\n    justify-content:${props => props.center ? 'center': 'flex-start'};\n    align-items:center;\n    color:${variables.secondaryClr};\n    cursor:pointer;\n    transition:0.2s;\n    :hover{\n        background-color:${props => props.hover ? `${variables.taskBG}` : 'unset'};\n    }\n    p{\n        padding-left:10px;\n    }\n`;\n\nconst Icon = styled.span`\n    font-size:${variables.iconFZ};\n`;\n\nconst NewTask = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false);\n    const [ inputValue, setInputValue ] = useState('');\n\n    const handleOpen = () => {\n        setIsOpen(true);\n    };\n\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n\n    const handleSubmmit = e => {\n        e.preventDefault();\n        console.log(inputValue);\n        setInputValue('');\n        setIsOpen(false);\n    };\n\n    const changeInputValue = e => {\n        setInputValue(e.target.value);\n    };\n\n    return(\n        \n            isOpen ? \n                <Form onSubmit={handleSubmmit}>\n                    <textarea\n                        onChange={changeInputValue}\n                        value={inputValue}\n                    />\n                    <BtnBox>\n                        <Btn \n                            type='submit'\n                            width \n                            bg\n                            center\n                            hover\n                            \n                        >\n                            Добавить карточку\n                        </Btn>\n                        <Btn \n                            left\n                            hover\n                            center\n                            onClick={handleClose}\n                        >\n                            <Icon>&#215;</Icon>\n                        </Btn>\n                    </BtnBox>\n                </Form> \n            : \n            <Btn onClick={handleOpen} >\n                <Icon>&#43;</Icon>\n            <p>Добавить карточку</p>\n            </Btn>\n        )\n};\nexport default NewTask;","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {Droppable} from 'react-beautiful-dnd';\n//components\nimport Task from './Task';\nimport NewTask from './NewTask';\n\nconst Wrapper = styled.div`\n    width:20%;\n    min-width:100px;\n    min-height:30px;\n    background-color:${variables.secondaryBG};\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    .taskBox{\n        width:100%;\n        display:flex;\n        flex-direction:column;\n        justify-content:center;\n        align-items:center;\n    }\n`;\n\nconst Title = styled.div`\n    width:100%;\n    padding:10px 0;\n    background-color:${props => props.bgTitle};\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    font-size:${variables.titleFZ};\n    h3{\n        padding-left:10px;  \n    }\n    p{\n        padding-left:5px; \n    }  \n`;\n\nclass Column extends Component{\n    render(){\n       const {\n        title = 'default',\n        bgTitle = `${variables.accentBG}`,\n        tasks = [],\n        columnId = ''\n\n        } = this.props \n\n        return(\n            <Wrapper>\n                <Title bgTitle={bgTitle}>\n                    <h3>{title}</h3>\n                    {tasks.length === 0 ? null : <p>({tasks.length})</p>}\n                </Title>\n                <Droppable droppableId={columnId}>\n                    {(provided) => (\n                        <div className=\"taskBox\"\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                        >\n                        \n                                {tasks && tasks.map(({id, text},index)=> (\n                                    <Task \n                                        key={id}\n                                        id={id}\n                                        text={text}\n                                        index={index}\n                                    />\n                                    ))}\n                            {provided.placeholder}\n                        </div>\n                        \n                    )}\n                </Droppable>\n                <NewTask />\n            </Wrapper>\n        )\n    }\n};\n\nexport default Column;","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {variables} from '../variables';\nimport {connect} from 'react-redux';\nimport {onDragEnd} from '../redux/actions';\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport {testData} from '../constants';\n//Component\nimport Column from '../components/Column';\n\nconst Wrapper = styled.div`\n    width:100vw;\n    min-height:100vh ;\n    background-color:${variables.mainBG};\n    display:flex;\n    justify-content:center;\n    align-items:flex-start;\n`;\nconst Box = styled.div`\n    width:95vw;\n    margin-top:50px;\n    display:flex;\n    justify-content:space-between;\n    align-items:flex-start;\n`;\n\nclass Board extends Component {\n    state = {\n        render: testData.render,\n        tasks:testData.tasks,\n        columns:testData.columns\n    };\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result;\n        const {columns } = this.state;\n\n        if(!destination){ return;}\n        if(\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ){\n            return;\n        };\n\n        const start = columns[source.droppableId];\n        const finish = columns[destination.droppableId];\n        if(start === finish){\n\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index,1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n            const newColumn = {\n                ...start,\n                taskIds:newTaskIds,\n            };\n            const newState = {...this.state, columns: {...this.state.columns, [newColumn.id]:newColumn }};\n            this.setState(newState);\n            return;\n        }\n        const startTaskIds =Array.from(start.taskIds);\n        startTaskIds.splice(source.index,1);\n        const newStart = {\n            ...start,\n            taskIds:startTaskIds\n        };\n        const finishTaskIds =Array.from(finish.taskIds);   \n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds:finishTaskIds\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]:newStart,\n                [newFinish.id]:newFinish  \n            }};\n\n        this.setState(newState);\n    }\n    render(){\n        const {state:{\n                render,\n                tasks,\n                columns },\n                onDragEnd } = this;\n\n        return(\n            <Wrapper>\n                <Box>\n                <DragDropContext\n                     onDragEnd={onDragEnd}\n                    >\n                    {render.map(columnName =>(\n                        <Column \n                            key={columnName}\n                            columnId={columns[columnName].id}\n                            bgTitle={columns[columnName].bg}\n                            title={columns[columnName].title}\n                            tasks={columns[columnName].taskIds.map(id =>(\n                                tasks.find(task => task.id === id)\n                            ))}\n                        />\n                    ))}\n                     </DragDropContext>\n                </Box>    \n            </Wrapper>\n        )\n    }\n\n};\n\nconst STP = state => (\n    {\n        render: state.render,\n        tasks:state.tasks,\n        columns:state.columns\n    });\n\nconst DTP = dispatch => ({\n    onDragEnd: result => dispatch(onDragEnd(result))\n});\n\nexport default connect(STP, DTP)(Board);","import React, {useEffect} from 'react';\nimport {createGlobalStyle} from 'styled-components';\nimport {connect} from 'react-redux';\nimport {getTest} from './redux/actions';\nimport {variables} from './variables';\n//pages\nimport Board from './pages/Board';\n// import MainPage from './testDnd/Main';\n\n\nconst GlobalStyle = createGlobalStyle `\n  * {\n    box-sizing: border-box;\n  }\n\n  *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  p, ul, li, h1, h2, h3, h4 ,h5 ,h6, html, body{\n    margin: 0;\n    padding: 0;\n  }\n  h1, h2, h3, h4,h5, h6{\n    font-weight: normal;\n  }\n  input, textarea, button{\n    outline: none;\n    border:none;\n  }\n  body{\n    font-family: 'Helvetica', sans-serif;\n    font-size: 14px;\n    color:${variables.mainClr};\n    font-weight: 400;\n    min-width: 320px;\n    overflow-x: hidden;\n    background: #ffffff;\n    line-height: normal;\n  }\n\n  @media (min-width: 1921px) {\n  body {\n    font-size: 16px;\n  }\n}\n`;\n\nfunction App({getTest = () => { }, test}) {\n\n   useEffect(() => {\n    \n    getTest();\n\n   },[]);//eslint-disable-line\n\n  //  console.log('test redux connect', test)\n    return (\n        <> \n        < GlobalStyle /> \n          <Board />\n        </>\n    );\n}\n\nconst STP = state => (\n    {test: state.test}\n);\n\nconst DTP = dispatch => ({\n  getTest: () => dispatch(getTest()),\n});\n\nexport default connect(STP, DTP,)(App);\n","import {Type} from './types';\n\nconst initialState = {\n    tasks: [\n        {id: 't-0', row: \"0\", seq_num: 0, text: \"string1\" },\n        {id: 't-1', row: \"3\", seq_num: 0, text: \"string2\" },\n        {id: 't-2', row: \"2\", seq_num: 0, text: \"string3\" },\n        {id: 't-3', row: \"1\", seq_num: 0, text: \"string4\" },\n        {id: 't-4', row: \"0\", seq_num: 0, text: \"string5\" },\n        {id: 't-5', row: \"3\", seq_num: 0, text: \"string6\" },\n        {id: 't-6', row: \"2\", seq_num: 0, text: \"string7\" },\n        {id: 't-7', row: \"1\", seq_num: 0, text: \"string8\" },\n        {id: 't-8', row: \"0\", seq_num: 0, text: \"string9\" },\n        {id: 't-9', row: \"3\", seq_num: 0, text: \"string10\" },\n    ],\n\n    columns:{\n        row_0:{title:'ON-HOLD', bg: '#fb7e46', id:'0',taskIds:['t-2','t-3'] },\n        row_1:{title:'IN-PROGRESS', bg: '#2a92bf', id:'1', taskIds:['t-1']},\n        row_2:{title:'NEEDS-REVIEW', bg: '#f4ce46', id:'2', taskIds:['t-5','t-6', 't-7','t-8']},\n        row_3:{title:'APPROVED', bg: '#00b961', id:'3', taskIds:['t-1']}\n    }\n    ,\n    render:[ 'row_0', 'row_1', 'row_2', 'row_3' ],\n\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Type.GET_TEST:\n            return { \n                ...state,\n                test: action.payload\n            };\n        default:\n            return state;\n    }\n};\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter basename=\"/\">\n            <Route component={App}/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById(\n        'root'\n    )\n);\n"],"sourceRoot":""}